propel:
  _attributes:
    package: lib.model
    defaultIdMethod: native
  repo_localidad:
    _attributes: { phpName: RepoLocalidad, idMethod: native }
    id: { phpName: Id, type: INTEGER, size: '10', sqlType: 'int(10) unsigned', primaryKey: true, autoIncrement: true, required: true }
    codigo_provincia: { phpName: CodigoProvincia, type: CHAR, required: true, defaultValue: '', foreignTable: repo_provincia, foreignReference: id }
    localidad: { phpName: Localidad, type: VARCHAR, size: '100', required: true }
    codigoPostal: { phpName: Codigopostal, type: VARCHAR, size: '10', required: true }
    codigoTelArea: { phpName: Codigotelarea, type: VARCHAR, size: '5', required: true }
    latitud: { phpName: Latitud, type: DECIMAL, size: '17', scale: '14', required: true }
    longitud: { phpName: Longitud, type: DECIMAL, size: '17', scale: '14', required: true }
    _indexes: { codigo_provincia: [codigo_provincia] }
  repo_provincia:
    _attributes: { phpName: RepoProvincia, idMethod: native }
    provincia: { phpName: Provincia, type: VARCHAR, size: '255', required: true }
    id: { phpName: Id, type: CHAR, primaryKey: true, required: true }
  server:
    _attributes: { phpName: Server, idMethod: native }
    id: { phpName: Id, type: INTEGER, size: '10', sqlType: 'int(10) unsigned', primaryKey: true, autoIncrement: true, required: true }
    repo_localidad_id: { phpName: RepoLocalidadId, type: INTEGER, size: '10', sqlType: 'int(10) unsigned', required: true, foreignTable: repo_localidad, foreignReference: id, onDelete: CASCADE, onUpdate: CASCADE }
    descripcion: { phpName: Descripcion, type: VARCHAR, size: '50', required: true }
    ultimo_reporte: { phpName: UltimoReporte, type: TIMESTAMP, required: false }
    ultimo_reporte_contenido: { phpName: UltimoReporteContenido, type: LONGVARCHAR, required: true }
    hash: { phpName: Hash, type: CHAR, size: '32', required: true }
    chequear_replicacion_bd: { phpName: ChequearReplicacionBd, type: BOOLEAN, size: '1', required: true, defaultValue: true }
    chequear_moodledata: { phpName: ChequearMoodledata, type: BOOLEAN, size: '1', required: true, defaultValue: true }
    chequear_codigo: { phpName: ChequearCodigo, type: BOOLEAN, size: '1', required: true, defaultValue: true }
    estado_replicacion_bd: { phpName: EstadoReplicacionBd, type: BOOLEAN, size: '1', required: false }
    estado_moodledata: { phpName: EstadoMoodledata, type: BOOLEAN, size: '1', required: false }
    estado_codigo: { phpName: EstadoCodigo, type: BOOLEAN, size: '1', required: false }
    _indexes: { repo_localidad_id: [repo_localidad_id], ultimo_reporte: [ultimo_reporte] }
  sf_guard_group:
    _attributes: { phpName: SfGuardGroup, idMethod: native }
    id: { phpName: Id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    name: { phpName: Name, type: VARCHAR, size: '255', required: true }
    description: { phpName: Description, type: LONGVARCHAR, required: false }
  sf_guard_group_permission:
    _attributes: { phpName: SfGuardGroupPermission, idMethod: native }
    group_id: { phpName: GroupId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_group, foreignReference: id, onDelete: CASCADE }
    permission_id: { phpName: PermissionId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_permission, foreignReference: id, onDelete: CASCADE }
    _indexes: { sf_guard_group_permission_FI_2: [permission_id] }
  sf_guard_permission:
    _attributes: { phpName: SfGuardPermission, idMethod: native }
    id: { phpName: Id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    name: { phpName: Name, type: VARCHAR, size: '255', required: true }
    description: { phpName: Description, type: LONGVARCHAR, required: false }
  sf_guard_user:
    _attributes: { phpName: SfGuardUser, idMethod: native }
    id: { phpName: Id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    username: { phpName: Username, type: VARCHAR, size: '128', required: true }
    algorithm: { phpName: Algorithm, type: VARCHAR, size: '128', required: true, defaultValue: sha1 }
    salt: { phpName: Salt, type: VARCHAR, size: '128', required: true }
    password: { phpName: Password, type: VARCHAR, size: '128', required: true }
    created_at: { phpName: CreatedAt, type: TIMESTAMP, required: false }
    last_login: { phpName: LastLogin, type: TIMESTAMP, required: false }
    is_active: { phpName: IsActive, type: TINYINT, required: true, defaultValue: '1' }
    is_super_admin: { phpName: IsSuperAdmin, type: TINYINT, required: true, defaultValue: '0' }
    _uniques: { sf_guard_user_U_1: [username] }
  sf_guard_user_group:
    _attributes: { phpName: SfGuardUserGroup, idMethod: native }
    user_id: { phpName: UserId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: CASCADE }
    group_id: { phpName: GroupId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_group, foreignReference: id, onDelete: CASCADE }
    _indexes: { sf_guard_user_group_FI_2: [group_id] }
  sf_guard_user_permission:
    _attributes: { phpName: SfGuardUserPermission, idMethod: native }
    user_id: { phpName: UserId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: CASCADE }
    permission_id: { phpName: PermissionId, type: INTEGER, primaryKey: true, required: true, foreignTable: sf_guard_permission, foreignReference: id, onDelete: CASCADE }
    _indexes: { sf_guard_user_permission_FI_2: [permission_id] }
